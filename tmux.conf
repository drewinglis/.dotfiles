# Use UTF8.
set-option -g utf8 on
set-window-option -g utf8 on

# I'm not sure why I picked this, but it seems to make most programs behave
# sanely.
set-option -g default-terminal "screen-256color"

set-option -g mode-keys vi
set-option -g history-limit 10000

# Status bar. The focused window name is green; everything else is white. The
# background is the terminal default.
set-option -g status-bg default
set-option -g status-fg white
set-window-option -g window-status-current-fg green
set-window-option -g window-status-current-bg default

# Show a heart in the right hand status bar.
set-option -g status-right-length 2
set-option -g status-right "<3"

# Turn on automatic window renumbering.
set-option -g renumber-windows on

# Start window and pane numbering at one. (I do this because the number keys
# "start" at one, and it's easy for me to have the number keys map to the pane
# of the same number.)
set-option -g base-index 1
set-window-option -g pane-base-index 1

# TODO(drewinglis): figure out why this is here. Maybe it's necessary for irssi?
set-option -sg escape-time 1

# Turn mouse off. Not using the mouse is an explicit goal of mine when using
# tmux.
set-option -g mouse off

# u scrolls up, like in less.
unbind-key u
bind-key u copy-mode

# Show a thing in the status bar when there's new activity for a given window.
set-window-option -g monitor-activity on
# Don't change the color of the window name, though.
set-window-option -g window-status-activity-attr none

# Update the status bar every second.
set-option -g status-interval 1

# y and p as in vim
bind-key Escape copy-mode
unbind-key p
bind-key p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'Space' halfpage-down
bind-key -t vi-copy 'Bspace' halfpage-up
bind-key -t vi-copy 'd' halfpage-down
bind-key -t vi-copy 'u' halfpage-up

# extra commands for interacting with the ICCCM clipboard
bind-key C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# easy-to-remember split pane commands
bind-key | split-window -h -c "#{pane_current_path}"\; refresh-client -S
bind-key - split-window -v -c "#{pane_current_path}"\; refresh-client -S
unbind-key '"'
unbind-key %

# moving between windows
bind-key -n C-M-l next-window\; refresh-client -S
bind-key -n C-M-h previous-window\; refresh-client -S

# Smart pane switching with awareness of vim splits
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# resize panes with vim movement keys
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# switch windows with alt+number
bind-key -n M-1 select-window -t 1\; refresh-client -S
bind-key -n M-2 select-window -t 2\; refresh-client -S
bind-key -n M-3 select-window -t 3\; refresh-client -S
bind-key -n M-4 select-window -t 4\; refresh-client -S
bind-key -n M-5 select-window -t 5\; refresh-client -S
bind-key -n M-6 select-window -t 6\; refresh-client -S
bind-key -n M-7 select-window -t 7\; refresh-client -S
bind-key -n M-8 select-window -t 8\; refresh-client -S
bind-key -n M-9 select-window -t 9\; refresh-client -S
bind-key -n M-0 select-window -t 10\; refresh-client -S

bind-key 0 select-window -t 10\; refresh-client -S

# allow setting the tmux window name based on a shell function
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format "#{?pane_in_mode,[tmux],#(~/bin/tmux-window-name #{pane_current_path} #{pane_current_command})}#{?pane_dead,[dead],}"
